<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springproject.goodz.post.mapper.PostMapper">


    <select id="list" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , u.nickname as nickname
              , u.profile_picture_url as profileImg
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL(l.like_count, 0) AS likeCount
        FROM post p
        inner join file f on post_no = parent_no and f.parent_table='post' and file_code = 1
        inner join user u on p.user_id = u.user_id
        LEFT JOIN (SELECT post_no, COUNT(*) AS like_count FROM `Like` GROUP BY post_no) l ON p.post_no = l.post_no
    </select>

    <select id="select" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL(l.like_count, 0) AS likeCount
        FROM post p
        inner join file f on post_no = parent_no and f.parent_table='post' and file_code = 1
        LEFT JOIN (SELECT post_no, COUNT(*) AS like_count FROM `Like` GROUP BY post_no) l ON p.post_no = l.post_no
        WHERE p.post_no = #{postNo};
    </select>

    <select id="selectById" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL(l.like_count, 0) AS likeCount
        FROM post p
        inner join file f on post_no = parent_no and f.parent_table='post' and user_id = #{userId} and file_code = 1
        LEFT JOIN (SELECT post_no, COUNT(*) AS like_count FROM `Like` GROUP BY post_no) l ON p.post_no = l.post_no
    </select>

    <select id="maxNo">
        SELECT max(post_no) as maxNo
        FROM post
    </select>

    <insert id="insert">
        INSERT INTO post (user_id, content, parent_table)
        VALUES (#{userId}, #{content}, 'post')
    </insert>

    <update id="update">

    </update>

    <delete id="delete">
    
    </delete>

    

</mapper>